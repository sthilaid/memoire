<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
               "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
lang="en" xml:lang="en">
<head>
<title>Création d'animations</title>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
<meta name="generator" content="Org-mode"/>
<meta name="generated" content="2009/02/02 09:47:46 AM"/>
<meta name="author" content=""/>
<style type="text/css">
  html {
	font-family: Times, serif;
	font-size: 12pt;
  }
  .title { text-align: center; }
  .todo  { color: red; }
  .done { color: green; }
  .timestamp { color: grey }
  .timestamp-kwd { color: CadetBlue }
  .tag { background-color:lightblue; font-weight:normal }
  .target { }
  pre {
	border: 1pt solid #AEBDCC;
	background-color: #F3F5F7;
	padding: 5pt;
	font-family: courier, monospace;
        font-size: 90%;
  }
  table { border-collapse: collapse; }
  td, th {
	vertical-align: top;
	<!--border: 1pt solid #ADB9CC;-->
  }
  dt { font-weight: bold; }
</style>
</head><body>
<h1 class="title">Création d'animations</h1>


<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#sec-1">1 Besoin</a></li>
<li><a href="#sec-2">2 Space-invaders</a></li>
</ul>
</div>
</div>

<div id="outline-container-1" class="outline-2">
<h2 id="sec-1">1 Besoin</h2>
<div id="text-1">

<p>Les animations sont des éléments primordiaux à l'intérieur des jeux
vidéo. En effet, ces dernières se retrouvent à tous moments dans un
jeu: au début de celui-ci, durant l'introduction des niveaux,
pendant des moments clés de niveaux, à la fin du jeut, etc&hellip;
</p>
<p>
Le scripting d'animation se doit donc d'être très agréable et
simple, afin de permettre aux artistes responsable de leur création
de pouvoir exprimer comment celles-ci devraient se produire.
</p>
</div>

</div>

<div id="outline-container-2" class="outline-2">
<h2 id="sec-2">2 Space-invaders</h2>
<div id="text-2">

<p>Ce jeux contient un minimum d'animations, mais en contient déjà
suffisamment pour permettre de saisir l'importance de celles-ci dans
un jeu plus complex. C'est pour cette raison que lors de la
conception du système de simulation par fils d'exécutions
coopératifs, une attention spéciale a été apportée afin de permettre
de pouvoir facilement écrire les animations présentes dans le jeu.
</p>
<p>
C'est principalement par l'ajout de la macro compose-thunks que les
animations ont pu être écrites de façon simple et modulaire.
</p>


<pre class="src">(<span style="color: #a020f0;">define-macro</span> (<span style="color: #b8860b;">compose-thunks</span> . thunks)
  (<span style="color: #a020f0;">define</span> (<span style="color: #0000ff;">composition</span> thunks)
    (<span style="color: #a020f0;">cond</span> ((not (pair? thunks)) (error ...))
          ((<span style="color: #a020f0;">and</span> (pair? thunks) (null? (cdr thunks)))
           (car thunks))
          (<span style="color: #a020f0;">else</span> 
           `(<span style="color: #a020f0;">lambda</span> () (,(car thunks))
                       (continue-with-thunk! ,(composition (cdr thunks)))))))
  (composition thunks))
</pre>


<p>
On peut ainsi écrire plusieurs thunks d'animations et les composer
en utilisant cette nouvelle forme spéciale.
</p></div>
</div>
<div id="postamble"><p class="author"> Author: 
<a href="mailto:dave@david-laptop">&lt;dave@david-laptop&gt;</a>
</p>
<p class="date"> Date: 2009/02/02 09:47:46 AM</p>
<p>HTML generated by org-mode 6.05b in emacs 22<p>
</div></body>
</html>
